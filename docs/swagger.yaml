basePath: /api
definitions:
  apperror.AppError:
    properties:
      message:
        type: string
    type: object
  auth.AuthResponse:
    properties:
      accessToken:
        type: string
      user:
        $ref: '#/definitions/user.User'
    type: object
  auth.CodeRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  auth.EmailPasswordRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.EmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.JwtToken:
    properties:
      accessToken:
        type: string
    type: object
  auth.PasswordRequest:
    properties:
      password:
        minLength: 8
        type: string
    required:
    - password
    type: object
  auth.ProfileRequest:
    properties:
      firstName:
        maxLength: 50
        minLength: 1
        type: string
      lastName:
        maxLength: 50
        minLength: 1
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - firstName
    - lastName
    - username
    type: object
  brand.Brand:
    properties:
      banner:
        type: string
      country:
        $ref: '#/definitions/country.Country'
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      logo:
        type: string
      marketSection:
        $ref: '#/definitions/marketsection.MarketSection'
      marketSections:
        items:
          $ref: '#/definitions/marketsection.MarketSection'
        type: array
      name:
        type: string
      phoneNumber:
        type: string
      states:
        items:
          $ref: '#/definitions/state.State'
        type: array
      updatedAt:
        type: string
    type: object
  country.Country:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  handler.BrandRequest:
    properties:
      banner:
        type: string
      country:
        type: integer
      email:
        type: string
      logo:
        description: 'TODO: validate url'
        type: string
      marketSection:
        type: integer
      marketSubSectionIds:
        description: |-
          возможно нужно использовать dive
          TODO: подумать как оставлять только уникальные
        items:
          type: integer
        type: array
      name:
        type: string
      phoneNumber:
        type: string
      stateIds:
        items:
          type: integer
        type: array
    required:
    - banner
    - country
    - email
    - logo
    - marketSection
    - marketSubSectionIds
    - name
    - phoneNumber
    - stateIds
    type: object
  handler.BrandResponse:
    properties:
      brand:
        $ref: '#/definitions/brand.Brand'
    type: object
  handler.BusinessProfileRequest:
    properties:
      businessIndustryId:
        type: integer
      businessName:
        maxLength: 30
        minLength: 3
        type: string
      countryId:
        type: integer
      email:
        type: string
      phoneNumber:
        type: string
      regionId:
        type: integer
      stateId:
        type: integer
    required:
    - businessIndustryId
    - businessName
    - countryId
    - email
    - phoneNumber
    - regionId
    - stateId
    type: object
  handler.ContriesResponse:
    properties:
      countries:
        items:
          $ref: '#/definitions/country.Country'
        type: array
    type: object
  handler.FileResponse:
    properties:
      file:
        $ref: '#/definitions/upload.File'
    type: object
  handler.IndustriesResponse:
    properties:
      industries:
        items:
          $ref: '#/definitions/industry.Industry'
        type: array
    type: object
  handler.MarketSectionsResponse:
    properties:
      marketSections:
        items:
          $ref: '#/definitions/marketsection.MarketSection'
        type: array
    type: object
  handler.ProfileRequest:
    properties:
      age:
        type: integer
      countryId:
        type: integer
      firstName:
        maxLength: 30
        minLength: 3
        type: string
      lastName:
        maxLength: 30
        minLength: 3
        type: string
      phoneNumber:
        type: string
      regionId:
        type: integer
      stateId:
        type: integer
    type: object
  handler.RegionsResponse:
    properties:
      regions:
        items:
          $ref: '#/definitions/region.Region'
        type: array
    type: object
  handler.StatesResponse:
    properties:
      states:
        items:
          $ref: '#/definitions/state.State'
        type: array
    type: object
  industry.Industry:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  marketsection.MarketSection:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  region.Region:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  state.State:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  upload.File:
    properties:
      contentType:
        type: string
      name:
        type: string
      size:
        type: integer
    type: object
  user.BusinessIndustry:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  user.BusinessProfile:
    properties:
      businessIndustry:
        $ref: '#/definitions/user.BusinessIndustry'
      businessName:
        type: string
      country:
        $ref: '#/definitions/country.Country'
      email:
        type: string
      phoneNumber:
        type: string
      region:
        $ref: '#/definitions/region.Region'
      state:
        $ref: '#/definitions/state.State'
    type: object
  user.BusinessProfileResponse:
    properties:
      businessProfile:
        $ref: '#/definitions/user.BusinessProfile'
    type: object
  user.User:
    properties:
      age:
        type: integer
      avatar:
        type: string
      country:
        $ref: '#/definitions/country.Country'
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      isAdmin:
        type: boolean
      isPasswordSet:
        type: boolean
      isVerified:
        type: boolean
      lastName:
        type: string
      phoneNumber:
        type: string
      region:
        $ref: '#/definitions/region.Region'
      state:
        $ref: '#/definitions/state.State'
      username:
        type: string
    type: object
  user.UserResponse:
    properties:
      user:
        $ref: '#/definitions/user.User'
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Kushfinds application
  title: Kushfinds API
  version: "1.0"
paths:
  /auth/login/email:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.EmailRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /auth/login/password:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.EmailPasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /auth/logout:
    get:
      responses:
        "200":
          description: OK
      tags:
      - auth
  /auth/refresh:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.JwtToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /auth/register/email:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.EmailRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /auth/register/password:
    patch:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.PasswordRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - auth
  /auth/register/profile:
    patch:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.ProfileRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - auth
  /auth/register/verify:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.CodeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /auth/verify/resend:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.EmailRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - auth
  /brands:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.BrandRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.BrandResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - market
  /countries:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ContriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - location
  /countries/{country_id}/states:
    get:
      parameters:
      - description: Country ID
        in: path
        name: country_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StatesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - location
  /industries:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.IndustriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - industry
  /market-sections:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.MarketSectionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - market
  /ping:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - other
  /states/{state_id}/regions:
    get:
      parameters:
      - description: State ID
        in: path
        name: state_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.RegionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - location
  /static/{filename}:
    get:
      parameters:
      - description: file name
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      tags:
      - upload
  /upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: form data
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - upload
  /users/business:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.BusinessProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - users
    patch:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.BusinessProfileRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.BusinessProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /users/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /users/profile:
    patch:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ProfileRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      security:
      - ApiKeyAuth: []
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
